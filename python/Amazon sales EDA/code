{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "fe0f94f0",
   "metadata": {},
   "source": [
    "# Amazon Sales Data Analysis\n",
    "Problem Statement- Sales trend by - years,months and days"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c39e0015",
   "metadata": {},
   "outputs": [],
   "source": [
    "# importing libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "plt.style.use('ggplot')\n",
    "from matplotlib.pyplot import figure\n",
    "%matplotlib inline\n",
    "matplotlib.rcParams['figure.figsize']=(12,8)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "03d34a6b",
   "metadata": {},
   "source": [
    "## Data Preaparing and Data Cleaning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "14f144e0",
   "metadata": {},
   "outputs": [],
   "source": [
    "data=pd.read_excel('SALESDATA.xls')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6b8a81b3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustKey</th>\n",
       "      <th>DateKey</th>\n",
       "      <th>Discount Amount</th>\n",
       "      <th>Invoice Date</th>\n",
       "      <th>Invoice Number</th>\n",
       "      <th>Item Class</th>\n",
       "      <th>Item Number</th>\n",
       "      <th>Item</th>\n",
       "      <th>Line Number</th>\n",
       "      <th>List Price</th>\n",
       "      <th>...</th>\n",
       "      <th>Sales Amount</th>\n",
       "      <th>Sales Amount Based on List Price</th>\n",
       "      <th>Sales Cost Amount</th>\n",
       "      <th>Sales Margin Amount</th>\n",
       "      <th>Sales Price</th>\n",
       "      <th>Sales Quantity</th>\n",
       "      <th>Sales Rep</th>\n",
       "      <th>U/M</th>\n",
       "      <th>Unnamed: 20</th>\n",
       "      <th>Unnamed: 21</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10000481</td>\n",
       "      <td>2017-04-30</td>\n",
       "      <td>-237.91</td>\n",
       "      <td>2017-04-30</td>\n",
       "      <td>100012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban Large Eggs</td>\n",
       "      <td>2000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>...</td>\n",
       "      <td>237.91</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>237.91</td>\n",
       "      <td>237.910000</td>\n",
       "      <td>1</td>\n",
       "      <td>184</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>U/M = unit of measure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10002220</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>368.79</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>100233</td>\n",
       "      <td>P01</td>\n",
       "      <td>20910</td>\n",
       "      <td>Moms Sliced Turkey</td>\n",
       "      <td>1000</td>\n",
       "      <td>824.96</td>\n",
       "      <td>...</td>\n",
       "      <td>456.17</td>\n",
       "      <td>824.96</td>\n",
       "      <td>0.00</td>\n",
       "      <td>456.17</td>\n",
       "      <td>456.170000</td>\n",
       "      <td>1</td>\n",
       "      <td>127</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10002220</td>\n",
       "      <td>2017-10-17</td>\n",
       "      <td>109.73</td>\n",
       "      <td>2017-10-17</td>\n",
       "      <td>116165</td>\n",
       "      <td>P01</td>\n",
       "      <td>38076</td>\n",
       "      <td>Cutting Edge Foot-Long Hot Dogs</td>\n",
       "      <td>1000</td>\n",
       "      <td>548.66</td>\n",
       "      <td>...</td>\n",
       "      <td>438.93</td>\n",
       "      <td>548.66</td>\n",
       "      <td>0.00</td>\n",
       "      <td>438.93</td>\n",
       "      <td>438.930000</td>\n",
       "      <td>1</td>\n",
       "      <td>127</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>EA = each</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10002489</td>\n",
       "      <td>2017-06-03</td>\n",
       "      <td>-211.75</td>\n",
       "      <td>2017-06-03</td>\n",
       "      <td>100096</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Kiwi Lox</td>\n",
       "      <td>1000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>...</td>\n",
       "      <td>211.75</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>211.75</td>\n",
       "      <td>211.750000</td>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10004516</td>\n",
       "      <td>2017-05-27</td>\n",
       "      <td>96627.94</td>\n",
       "      <td>2017-05-27</td>\n",
       "      <td>103341</td>\n",
       "      <td>P01</td>\n",
       "      <td>60776</td>\n",
       "      <td>High Top Sweet Onion</td>\n",
       "      <td>1000</td>\n",
       "      <td>408.52</td>\n",
       "      <td>...</td>\n",
       "      <td>89248.66</td>\n",
       "      <td>185876.60</td>\n",
       "      <td>0.00</td>\n",
       "      <td>89248.66</td>\n",
       "      <td>196.150901</td>\n",
       "      <td>455</td>\n",
       "      <td>124</td>\n",
       "      <td>SE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SE = some SI unit like kgs or gallons</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65277</th>\n",
       "      <td>10017638</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>505.78</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>226497</td>\n",
       "      <td>P01</td>\n",
       "      <td>13447</td>\n",
       "      <td>High Top Oranges</td>\n",
       "      <td>8000</td>\n",
       "      <td>119.52</td>\n",
       "      <td>...</td>\n",
       "      <td>569.90</td>\n",
       "      <td>1075.68</td>\n",
       "      <td>239.95</td>\n",
       "      <td>329.95</td>\n",
       "      <td>63.322222</td>\n",
       "      <td>9</td>\n",
       "      <td>180</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65278</th>\n",
       "      <td>10017638</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>410.75</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>226497</td>\n",
       "      <td>P01</td>\n",
       "      <td>25906</td>\n",
       "      <td>Landslide White Sugar</td>\n",
       "      <td>38000</td>\n",
       "      <td>436.78</td>\n",
       "      <td>...</td>\n",
       "      <td>462.81</td>\n",
       "      <td>873.56</td>\n",
       "      <td>423.55</td>\n",
       "      <td>39.26</td>\n",
       "      <td>231.405000</td>\n",
       "      <td>2</td>\n",
       "      <td>180</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65279</th>\n",
       "      <td>10017638</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>876.16</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>226497</td>\n",
       "      <td>P01</td>\n",
       "      <td>61856</td>\n",
       "      <td>Moms Potato Salad</td>\n",
       "      <td>227001</td>\n",
       "      <td>232.92</td>\n",
       "      <td>...</td>\n",
       "      <td>987.20</td>\n",
       "      <td>1863.36</td>\n",
       "      <td>574.00</td>\n",
       "      <td>413.20</td>\n",
       "      <td>123.400000</td>\n",
       "      <td>8</td>\n",
       "      <td>180</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65280</th>\n",
       "      <td>10017638</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>24226.77</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>226498</td>\n",
       "      <td>P01</td>\n",
       "      <td>17801</td>\n",
       "      <td>Better Fancy Canned Sardines</td>\n",
       "      <td>1000</td>\n",
       "      <td>1431.23</td>\n",
       "      <td>...</td>\n",
       "      <td>27297.51</td>\n",
       "      <td>51524.28</td>\n",
       "      <td>16188.90</td>\n",
       "      <td>11108.61</td>\n",
       "      <td>758.264167</td>\n",
       "      <td>36</td>\n",
       "      <td>180</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65281</th>\n",
       "      <td>10017638</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>24479.26</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>226498</td>\n",
       "      <td>P01</td>\n",
       "      <td>27550</td>\n",
       "      <td>Imagine Popsicles</td>\n",
       "      <td>4000</td>\n",
       "      <td>1084.61</td>\n",
       "      <td>...</td>\n",
       "      <td>27582.02</td>\n",
       "      <td>52061.28</td>\n",
       "      <td>14234.22</td>\n",
       "      <td>13347.80</td>\n",
       "      <td>574.625417</td>\n",
       "      <td>48</td>\n",
       "      <td>180</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>65282 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        CustKey    DateKey  Discount Amount Invoice Date  Invoice Number  \\\n",
       "0      10000481 2017-04-30          -237.91   2017-04-30          100012   \n",
       "1      10002220 2017-07-14           368.79   2017-07-14          100233   \n",
       "2      10002220 2017-10-17           109.73   2017-10-17          116165   \n",
       "3      10002489 2017-06-03          -211.75   2017-06-03          100096   \n",
       "4      10004516 2017-05-27         96627.94   2017-05-27          103341   \n",
       "...         ...        ...              ...          ...             ...   \n",
       "65277  10017638 2018-03-21           505.78   2018-03-21          226497   \n",
       "65278  10017638 2018-03-21           410.75   2018-03-21          226497   \n",
       "65279  10017638 2018-03-21           876.16   2018-03-21          226497   \n",
       "65280  10017638 2018-03-21         24226.77   2018-03-21          226498   \n",
       "65281  10017638 2018-03-21         24479.26   2018-03-21          226498   \n",
       "\n",
       "      Item Class Item Number                             Item  Line Number  \\\n",
       "0            NaN         NaN                 Urban Large Eggs         2000   \n",
       "1            P01       20910               Moms Sliced Turkey         1000   \n",
       "2            P01       38076  Cutting Edge Foot-Long Hot Dogs         1000   \n",
       "3            NaN         NaN                         Kiwi Lox         1000   \n",
       "4            P01       60776             High Top Sweet Onion         1000   \n",
       "...          ...         ...                              ...          ...   \n",
       "65277        P01       13447                 High Top Oranges         8000   \n",
       "65278        P01       25906            Landslide White Sugar        38000   \n",
       "65279        P01       61856                Moms Potato Salad       227001   \n",
       "65280        P01       17801     Better Fancy Canned Sardines         1000   \n",
       "65281        P01       27550                Imagine Popsicles         4000   \n",
       "\n",
       "       List Price  ...  Sales Amount Sales Amount Based on List Price  \\\n",
       "0            0.00  ...        237.91                             0.00   \n",
       "1          824.96  ...        456.17                           824.96   \n",
       "2          548.66  ...        438.93                           548.66   \n",
       "3            0.00  ...        211.75                             0.00   \n",
       "4          408.52  ...      89248.66                        185876.60   \n",
       "...           ...  ...           ...                              ...   \n",
       "65277      119.52  ...        569.90                          1075.68   \n",
       "65278      436.78  ...        462.81                           873.56   \n",
       "65279      232.92  ...        987.20                          1863.36   \n",
       "65280     1431.23  ...      27297.51                         51524.28   \n",
       "65281     1084.61  ...      27582.02                         52061.28   \n",
       "\n",
       "       Sales Cost Amount  Sales Margin Amount  Sales Price  Sales Quantity  \\\n",
       "0                   0.00               237.91   237.910000               1   \n",
       "1                   0.00               456.17   456.170000               1   \n",
       "2                   0.00               438.93   438.930000               1   \n",
       "3                   0.00               211.75   211.750000               1   \n",
       "4                   0.00             89248.66   196.150901             455   \n",
       "...                  ...                  ...          ...             ...   \n",
       "65277             239.95               329.95    63.322222               9   \n",
       "65278             423.55                39.26   231.405000               2   \n",
       "65279             574.00               413.20   123.400000               8   \n",
       "65280           16188.90             11108.61   758.264167              36   \n",
       "65281           14234.22             13347.80   574.625417              48   \n",
       "\n",
       "       Sales Rep  U/M  Unnamed: 20                            Unnamed: 21  \n",
       "0            184   EA          NaN                  U/M = unit of measure  \n",
       "1            127   EA          NaN                                    NaN  \n",
       "2            127   EA          NaN                              EA = each  \n",
       "3            160   EA          NaN                                    NaN  \n",
       "4            124   SE          NaN  SE = some SI unit like kgs or gallons  \n",
       "...          ...  ...          ...                                    ...  \n",
       "65277        180   EA          NaN                                    NaN  \n",
       "65278        180   EA          NaN                                    NaN  \n",
       "65279        180   EA          NaN                                    NaN  \n",
       "65280        180   EA          NaN                                    NaN  \n",
       "65281        180   EA          NaN                                    NaN  \n",
       "\n",
       "[65282 rows x 22 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "3865477b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method DataFrame.info of         CustKey    DateKey  Discount Amount Invoice Date  Invoice Number  \\\n",
       "0      10000481 2017-04-30          -237.91   2017-04-30          100012   \n",
       "1      10002220 2017-07-14           368.79   2017-07-14          100233   \n",
       "2      10002220 2017-10-17           109.73   2017-10-17          116165   \n",
       "3      10002489 2017-06-03          -211.75   2017-06-03          100096   \n",
       "4      10004516 2017-05-27         96627.94   2017-05-27          103341   \n",
       "...         ...        ...              ...          ...             ...   \n",
       "65277  10017638 2018-03-21           505.78   2018-03-21          226497   \n",
       "65278  10017638 2018-03-21           410.75   2018-03-21          226497   \n",
       "65279  10017638 2018-03-21           876.16   2018-03-21          226497   \n",
       "65280  10017638 2018-03-21         24226.77   2018-03-21          226498   \n",
       "65281  10017638 2018-03-21         24479.26   2018-03-21          226498   \n",
       "\n",
       "      Item Class Item Number                             Item  Line Number  \\\n",
       "0            NaN         NaN                 Urban Large Eggs         2000   \n",
       "1            P01       20910               Moms Sliced Turkey         1000   \n",
       "2            P01       38076  Cutting Edge Foot-Long Hot Dogs         1000   \n",
       "3            NaN         NaN                         Kiwi Lox         1000   \n",
       "4            P01       60776             High Top Sweet Onion         1000   \n",
       "...          ...         ...                              ...          ...   \n",
       "65277        P01       13447                 High Top Oranges         8000   \n",
       "65278        P01       25906            Landslide White Sugar        38000   \n",
       "65279        P01       61856                Moms Potato Salad       227001   \n",
       "65280        P01       17801     Better Fancy Canned Sardines         1000   \n",
       "65281        P01       27550                Imagine Popsicles         4000   \n",
       "\n",
       "       List Price  ...  Sales Amount Sales Amount Based on List Price  \\\n",
       "0            0.00  ...        237.91                             0.00   \n",
       "1          824.96  ...        456.17                           824.96   \n",
       "2          548.66  ...        438.93                           548.66   \n",
       "3            0.00  ...        211.75                             0.00   \n",
       "4          408.52  ...      89248.66                        185876.60   \n",
       "...           ...  ...           ...                              ...   \n",
       "65277      119.52  ...        569.90                          1075.68   \n",
       "65278      436.78  ...        462.81                           873.56   \n",
       "65279      232.92  ...        987.20                          1863.36   \n",
       "65280     1431.23  ...      27297.51                         51524.28   \n",
       "65281     1084.61  ...      27582.02                         52061.28   \n",
       "\n",
       "       Sales Cost Amount  Sales Margin Amount  Sales Price  Sales Quantity  \\\n",
       "0                   0.00               237.91   237.910000               1   \n",
       "1                   0.00               456.17   456.170000               1   \n",
       "2                   0.00               438.93   438.930000               1   \n",
       "3                   0.00               211.75   211.750000               1   \n",
       "4                   0.00             89248.66   196.150901             455   \n",
       "...                  ...                  ...          ...             ...   \n",
       "65277             239.95               329.95    63.322222               9   \n",
       "65278             423.55                39.26   231.405000               2   \n",
       "65279             574.00               413.20   123.400000               8   \n",
       "65280           16188.90             11108.61   758.264167              36   \n",
       "65281           14234.22             13347.80   574.625417              48   \n",
       "\n",
       "       Sales Rep  U/M  Unnamed: 20                            Unnamed: 21  \n",
       "0            184   EA          NaN                  U/M = unit of measure  \n",
       "1            127   EA          NaN                                    NaN  \n",
       "2            127   EA          NaN                              EA = each  \n",
       "3            160   EA          NaN                                    NaN  \n",
       "4            124   SE          NaN  SE = some SI unit like kgs or gallons  \n",
       "...          ...  ...          ...                                    ...  \n",
       "65277        180   EA          NaN                                    NaN  \n",
       "65278        180   EA          NaN                                    NaN  \n",
       "65279        180   EA          NaN                                    NaN  \n",
       "65280        180   EA          NaN                                    NaN  \n",
       "65281        180   EA          NaN                                    NaN  \n",
       "\n",
       "[65282 rows x 22 columns]>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.info"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "49078a4f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustKey</th>\n",
       "      <th>Discount Amount</th>\n",
       "      <th>Invoice Number</th>\n",
       "      <th>Line Number</th>\n",
       "      <th>List Price</th>\n",
       "      <th>Order Number</th>\n",
       "      <th>Sales Amount</th>\n",
       "      <th>Sales Amount Based on List Price</th>\n",
       "      <th>Sales Cost Amount</th>\n",
       "      <th>Sales Margin Amount</th>\n",
       "      <th>Sales Price</th>\n",
       "      <th>Sales Quantity</th>\n",
       "      <th>Sales Rep</th>\n",
       "      <th>Unnamed: 20</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>6.528200e+04</td>\n",
       "      <td>65280.000000</td>\n",
       "      <td>65282.000000</td>\n",
       "      <td>65282.000000</td>\n",
       "      <td>65282.000000</td>\n",
       "      <td>65282.000000</td>\n",
       "      <td>65282.000000</td>\n",
       "      <td>65282.000000</td>\n",
       "      <td>65282.000000</td>\n",
       "      <td>65282.000000</td>\n",
       "      <td>65281.000000</td>\n",
       "      <td>65282.000000</td>\n",
       "      <td>65282.000000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.001770e+07</td>\n",
       "      <td>1855.574835</td>\n",
       "      <td>216223.662020</td>\n",
       "      <td>23713.849790</td>\n",
       "      <td>514.693380</td>\n",
       "      <td>180583.064352</td>\n",
       "      <td>2852.038373</td>\n",
       "      <td>4707.473613</td>\n",
       "      <td>1660.979228</td>\n",
       "      <td>1191.059145</td>\n",
       "      <td>283.615913</td>\n",
       "      <td>45.084311</td>\n",
       "      <td>137.422398</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>7.176148e+03</td>\n",
       "      <td>9037.140888</td>\n",
       "      <td>94992.281866</td>\n",
       "      <td>32664.024053</td>\n",
       "      <td>449.189182</td>\n",
       "      <td>67593.871116</td>\n",
       "      <td>15164.342107</td>\n",
       "      <td>20696.443785</td>\n",
       "      <td>9556.485250</td>\n",
       "      <td>5860.787502</td>\n",
       "      <td>252.876719</td>\n",
       "      <td>429.661793</td>\n",
       "      <td>26.643936</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000045e+07</td>\n",
       "      <td>-255820.800000</td>\n",
       "      <td>100012.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>100838.000000</td>\n",
       "      <td>200.010000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-3932.930000</td>\n",
       "      <td>-5000.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>103.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.001272e+07</td>\n",
       "      <td>246.037500</td>\n",
       "      <td>117931.000000</td>\n",
       "      <td>3000.000000</td>\n",
       "      <td>181.560000</td>\n",
       "      <td>115321.000000</td>\n",
       "      <td>308.387500</td>\n",
       "      <td>561.040000</td>\n",
       "      <td>167.790000</td>\n",
       "      <td>129.950000</td>\n",
       "      <td>100.070000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>113.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.001966e+07</td>\n",
       "      <td>441.760000</td>\n",
       "      <td>222869.500000</td>\n",
       "      <td>12000.000000</td>\n",
       "      <td>325.190000</td>\n",
       "      <td>203702.000000</td>\n",
       "      <td>553.940000</td>\n",
       "      <td>998.160000</td>\n",
       "      <td>304.500000</td>\n",
       "      <td>246.490000</td>\n",
       "      <td>183.757500</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>134.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.002351e+07</td>\n",
       "      <td>999.760000</td>\n",
       "      <td>314318.750000</td>\n",
       "      <td>32000.000000</td>\n",
       "      <td>803.860000</td>\n",
       "      <td>218576.000000</td>\n",
       "      <td>1280.042500</td>\n",
       "      <td>2315.040000</td>\n",
       "      <td>687.320000</td>\n",
       "      <td>579.530000</td>\n",
       "      <td>448.220000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>160.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.002758e+07</td>\n",
       "      <td>343532.660000</td>\n",
       "      <td>332842.000000</td>\n",
       "      <td>344000.000000</td>\n",
       "      <td>2760.700000</td>\n",
       "      <td>321532.000000</td>\n",
       "      <td>555376.000000</td>\n",
       "      <td>632610.160000</td>\n",
       "      <td>366576.000000</td>\n",
       "      <td>188800.000000</td>\n",
       "      <td>6035.000000</td>\n",
       "      <td>16000.000000</td>\n",
       "      <td>185.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            CustKey  Discount Amount  Invoice Number    Line Number  \\\n",
       "count  6.528200e+04     65280.000000    65282.000000   65282.000000   \n",
       "mean   1.001770e+07      1855.574835   216223.662020   23713.849790   \n",
       "std    7.176148e+03      9037.140888    94992.281866   32664.024053   \n",
       "min    1.000045e+07   -255820.800000   100012.000000    1000.000000   \n",
       "25%    1.001272e+07       246.037500   117931.000000    3000.000000   \n",
       "50%    1.001966e+07       441.760000   222869.500000   12000.000000   \n",
       "75%    1.002351e+07       999.760000   314318.750000   32000.000000   \n",
       "max    1.002758e+07    343532.660000   332842.000000  344000.000000   \n",
       "\n",
       "         List Price   Order Number   Sales Amount  \\\n",
       "count  65282.000000   65282.000000   65282.000000   \n",
       "mean     514.693380  180583.064352    2852.038373   \n",
       "std      449.189182   67593.871116   15164.342107   \n",
       "min        0.000000  100838.000000     200.010000   \n",
       "25%      181.560000  115321.000000     308.387500   \n",
       "50%      325.190000  203702.000000     553.940000   \n",
       "75%      803.860000  218576.000000    1280.042500   \n",
       "max     2760.700000  321532.000000  555376.000000   \n",
       "\n",
       "       Sales Amount Based on List Price  Sales Cost Amount  \\\n",
       "count                      65282.000000       65282.000000   \n",
       "mean                        4707.473613        1660.979228   \n",
       "std                        20696.443785        9556.485250   \n",
       "min                            0.000000           0.000000   \n",
       "25%                          561.040000         167.790000   \n",
       "50%                          998.160000         304.500000   \n",
       "75%                         2315.040000         687.320000   \n",
       "max                       632610.160000      366576.000000   \n",
       "\n",
       "       Sales Margin Amount   Sales Price  Sales Quantity     Sales Rep  \\\n",
       "count         65282.000000  65281.000000    65282.000000  65282.000000   \n",
       "mean           1191.059145    283.615913       45.084311    137.422398   \n",
       "std            5860.787502    252.876719      429.661793     26.643936   \n",
       "min           -3932.930000  -5000.000000       -1.000000    103.000000   \n",
       "25%             129.950000    100.070000        2.000000    113.000000   \n",
       "50%             246.490000    183.757500        3.000000    134.000000   \n",
       "75%             579.530000    448.220000        8.000000    160.000000   \n",
       "max          188800.000000   6035.000000    16000.000000    185.000000   \n",
       "\n",
       "       Unnamed: 20  \n",
       "count          0.0  \n",
       "mean           NaN  \n",
       "std            NaN  \n",
       "min            NaN  \n",
       "25%            NaN  \n",
       "50%            NaN  \n",
       "75%            NaN  \n",
       "max            NaN  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d59e82df",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "a820c1b2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CustKey                                 0\n",
       "DateKey                                 0\n",
       "Discount Amount                         2\n",
       "Invoice Date                            0\n",
       "Invoice Number                          0\n",
       "Item Class                           8289\n",
       "Item Number                            41\n",
       "Item                                    0\n",
       "Line Number                             0\n",
       "List Price                              0\n",
       "Order Number                            0\n",
       "Promised Delivery Date                  0\n",
       "Sales Amount                            0\n",
       "Sales Amount Based on List Price        0\n",
       "Sales Cost Amount                       0\n",
       "Sales Margin Amount                     0\n",
       "Sales Price                             1\n",
       "Sales Quantity                          0\n",
       "Sales Rep                               0\n",
       "U/M                                     0\n",
       "Unnamed: 20                         65282\n",
       "Unnamed: 21                         65278\n",
       "dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "db2fb1d1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustKey</th>\n",
       "      <th>DateKey</th>\n",
       "      <th>Discount Amount</th>\n",
       "      <th>Invoice Date</th>\n",
       "      <th>Invoice Number</th>\n",
       "      <th>Item Class</th>\n",
       "      <th>Item Number</th>\n",
       "      <th>Item</th>\n",
       "      <th>Line Number</th>\n",
       "      <th>List Price</th>\n",
       "      <th>...</th>\n",
       "      <th>Sales Amount</th>\n",
       "      <th>Sales Amount Based on List Price</th>\n",
       "      <th>Sales Cost Amount</th>\n",
       "      <th>Sales Margin Amount</th>\n",
       "      <th>Sales Price</th>\n",
       "      <th>Sales Quantity</th>\n",
       "      <th>Sales Rep</th>\n",
       "      <th>U/M</th>\n",
       "      <th>Unnamed: 20</th>\n",
       "      <th>Unnamed: 21</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10000481</td>\n",
       "      <td>2017-04-30</td>\n",
       "      <td>-237.910</td>\n",
       "      <td>2017-04-30</td>\n",
       "      <td>100012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban Large Eggs</td>\n",
       "      <td>2000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>...</td>\n",
       "      <td>237.91</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>237.91</td>\n",
       "      <td>237.910000</td>\n",
       "      <td>1</td>\n",
       "      <td>184</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>U/M = unit of measure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10002220</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>368.790</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>100233</td>\n",
       "      <td>P01</td>\n",
       "      <td>20910</td>\n",
       "      <td>Moms Sliced Turkey</td>\n",
       "      <td>1000</td>\n",
       "      <td>824.960</td>\n",
       "      <td>...</td>\n",
       "      <td>456.17</td>\n",
       "      <td>824.960</td>\n",
       "      <td>0.0</td>\n",
       "      <td>456.17</td>\n",
       "      <td>456.170000</td>\n",
       "      <td>1</td>\n",
       "      <td>127</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10002220</td>\n",
       "      <td>2017-10-17</td>\n",
       "      <td>109.730</td>\n",
       "      <td>2017-10-17</td>\n",
       "      <td>116165</td>\n",
       "      <td>P01</td>\n",
       "      <td>38076</td>\n",
       "      <td>Cutting Edge Foot-Long Hot Dogs</td>\n",
       "      <td>1000</td>\n",
       "      <td>548.660</td>\n",
       "      <td>...</td>\n",
       "      <td>438.93</td>\n",
       "      <td>548.660</td>\n",
       "      <td>0.0</td>\n",
       "      <td>438.93</td>\n",
       "      <td>438.930000</td>\n",
       "      <td>1</td>\n",
       "      <td>127</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>EA = each</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10002489</td>\n",
       "      <td>2017-06-03</td>\n",
       "      <td>-211.750</td>\n",
       "      <td>2017-06-03</td>\n",
       "      <td>100096</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Kiwi Lox</td>\n",
       "      <td>1000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>...</td>\n",
       "      <td>211.75</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>211.75</td>\n",
       "      <td>211.750000</td>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10004516</td>\n",
       "      <td>2017-05-27</td>\n",
       "      <td>96627.940</td>\n",
       "      <td>2017-05-27</td>\n",
       "      <td>103341</td>\n",
       "      <td>P01</td>\n",
       "      <td>60776</td>\n",
       "      <td>High Top Sweet Onion</td>\n",
       "      <td>1000</td>\n",
       "      <td>408.520</td>\n",
       "      <td>...</td>\n",
       "      <td>89248.66</td>\n",
       "      <td>185876.600</td>\n",
       "      <td>0.0</td>\n",
       "      <td>89248.66</td>\n",
       "      <td>196.150901</td>\n",
       "      <td>455</td>\n",
       "      <td>124</td>\n",
       "      <td>SE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SE = some SI unit like kgs or gallons</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>10004516</td>\n",
       "      <td>2017-05-30</td>\n",
       "      <td>-1950.000</td>\n",
       "      <td>2017-05-30</td>\n",
       "      <td>103610</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Best Choice Fudge Brownies</td>\n",
       "      <td>2000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>...</td>\n",
       "      <td>1950.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1950.00</td>\n",
       "      <td>1950.000000</td>\n",
       "      <td>1</td>\n",
       "      <td>124</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>10007866</td>\n",
       "      <td>2017-09-03</td>\n",
       "      <td>371.014</td>\n",
       "      <td>2017-09-03</td>\n",
       "      <td>100403</td>\n",
       "      <td>P01</td>\n",
       "      <td>20910</td>\n",
       "      <td>Moms Sliced Turkey</td>\n",
       "      <td>2000</td>\n",
       "      <td>795.314</td>\n",
       "      <td>...</td>\n",
       "      <td>424.30</td>\n",
       "      <td>795.314</td>\n",
       "      <td>0.0</td>\n",
       "      <td>424.30</td>\n",
       "      <td>424.300000</td>\n",
       "      <td>1</td>\n",
       "      <td>149</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>PR = pair</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>10009356</td>\n",
       "      <td>2017-06-18</td>\n",
       "      <td>608.080</td>\n",
       "      <td>2017-06-18</td>\n",
       "      <td>105481</td>\n",
       "      <td>P01</td>\n",
       "      <td>62550</td>\n",
       "      <td>Tell Tale Garlic</td>\n",
       "      <td>29000</td>\n",
       "      <td>575.000</td>\n",
       "      <td>...</td>\n",
       "      <td>541.92</td>\n",
       "      <td>1150.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>541.92</td>\n",
       "      <td>270.960000</td>\n",
       "      <td>2</td>\n",
       "      <td>103</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>10009356</td>\n",
       "      <td>2017-06-18</td>\n",
       "      <td>424.800</td>\n",
       "      <td>2017-06-18</td>\n",
       "      <td>105481</td>\n",
       "      <td>P01</td>\n",
       "      <td>60794</td>\n",
       "      <td>High Top Walnuts</td>\n",
       "      <td>18000</td>\n",
       "      <td>51.880</td>\n",
       "      <td>...</td>\n",
       "      <td>353.40</td>\n",
       "      <td>778.200</td>\n",
       "      <td>0.0</td>\n",
       "      <td>353.40</td>\n",
       "      <td>23.560000</td>\n",
       "      <td>15</td>\n",
       "      <td>103</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10009356</td>\n",
       "      <td>2017-06-18</td>\n",
       "      <td>13492.800</td>\n",
       "      <td>2017-06-18</td>\n",
       "      <td>105481</td>\n",
       "      <td>P01</td>\n",
       "      <td>36001</td>\n",
       "      <td>Big Time Frozen Cheese Pizza</td>\n",
       "      <td>9000</td>\n",
       "      <td>412.030</td>\n",
       "      <td>...</td>\n",
       "      <td>11229.00</td>\n",
       "      <td>24721.800</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11229.00</td>\n",
       "      <td>187.150000</td>\n",
       "      <td>60</td>\n",
       "      <td>103</td>\n",
       "      <td>EA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    CustKey    DateKey  Discount Amount Invoice Date  Invoice Number  \\\n",
       "0  10000481 2017-04-30         -237.910   2017-04-30          100012   \n",
       "1  10002220 2017-07-14          368.790   2017-07-14          100233   \n",
       "2  10002220 2017-10-17          109.730   2017-10-17          116165   \n",
       "3  10002489 2017-06-03         -211.750   2017-06-03          100096   \n",
       "4  10004516 2017-05-27        96627.940   2017-05-27          103341   \n",
       "5  10004516 2017-05-30        -1950.000   2017-05-30          103610   \n",
       "6  10007866 2017-09-03          371.014   2017-09-03          100403   \n",
       "7  10009356 2017-06-18          608.080   2017-06-18          105481   \n",
       "8  10009356 2017-06-18          424.800   2017-06-18          105481   \n",
       "9  10009356 2017-06-18        13492.800   2017-06-18          105481   \n",
       "\n",
       "  Item Class Item Number                             Item  Line Number  \\\n",
       "0        NaN         NaN                 Urban Large Eggs         2000   \n",
       "1        P01       20910               Moms Sliced Turkey         1000   \n",
       "2        P01       38076  Cutting Edge Foot-Long Hot Dogs         1000   \n",
       "3        NaN         NaN                         Kiwi Lox         1000   \n",
       "4        P01       60776             High Top Sweet Onion         1000   \n",
       "5        NaN         NaN       Best Choice Fudge Brownies         2000   \n",
       "6        P01       20910               Moms Sliced Turkey         2000   \n",
       "7        P01       62550                 Tell Tale Garlic        29000   \n",
       "8        P01       60794                 High Top Walnuts        18000   \n",
       "9        P01       36001     Big Time Frozen Cheese Pizza         9000   \n",
       "\n",
       "   List Price  ...  Sales Amount Sales Amount Based on List Price  \\\n",
       "0       0.000  ...        237.91                            0.000   \n",
       "1     824.960  ...        456.17                          824.960   \n",
       "2     548.660  ...        438.93                          548.660   \n",
       "3       0.000  ...        211.75                            0.000   \n",
       "4     408.520  ...      89248.66                       185876.600   \n",
       "5       0.000  ...       1950.00                            0.000   \n",
       "6     795.314  ...        424.30                          795.314   \n",
       "7     575.000  ...        541.92                         1150.000   \n",
       "8      51.880  ...        353.40                          778.200   \n",
       "9     412.030  ...      11229.00                        24721.800   \n",
       "\n",
       "   Sales Cost Amount  Sales Margin Amount  Sales Price  Sales Quantity  \\\n",
       "0                0.0               237.91   237.910000               1   \n",
       "1                0.0               456.17   456.170000               1   \n",
       "2                0.0               438.93   438.930000               1   \n",
       "3                0.0               211.75   211.750000               1   \n",
       "4                0.0             89248.66   196.150901             455   \n",
       "5                0.0              1950.00  1950.000000               1   \n",
       "6                0.0               424.30   424.300000               1   \n",
       "7                0.0               541.92   270.960000               2   \n",
       "8                0.0               353.40    23.560000              15   \n",
       "9                0.0             11229.00   187.150000              60   \n",
       "\n",
       "   Sales Rep  U/M  Unnamed: 20                            Unnamed: 21  \n",
       "0        184   EA          NaN                  U/M = unit of measure  \n",
       "1        127   EA          NaN                                    NaN  \n",
       "2        127   EA          NaN                              EA = each  \n",
       "3        160   EA          NaN                                    NaN  \n",
       "4        124   SE          NaN  SE = some SI unit like kgs or gallons  \n",
       "5        124   EA          NaN                                    NaN  \n",
       "6        149   EA          NaN                              PR = pair  \n",
       "7        103   EA          NaN                                    NaN  \n",
       "8        103   EA          NaN                                    NaN  \n",
       "9        103   EA          NaN                                    NaN  \n",
       "\n",
       "[10 rows x 22 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "c6fb8133",
   "metadata": {},
   "outputs": [],
   "source": [
    "data.drop(['Item Class','Unnamed: 20','Unnamed: 21'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d2b1c254",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustKey</th>\n",
       "      <th>DateKey</th>\n",
       "      <th>Discount Amount</th>\n",
       "      <th>Invoice Date</th>\n",
       "      <th>Invoice Number</th>\n",
       "      <th>Item Number</th>\n",
       "      <th>Item</th>\n",
       "      <th>Line Number</th>\n",
       "      <th>List Price</th>\n",
       "      <th>Order Number</th>\n",
       "      <th>Promised Delivery Date</th>\n",
       "      <th>Sales Amount</th>\n",
       "      <th>Sales Amount Based on List Price</th>\n",
       "      <th>Sales Cost Amount</th>\n",
       "      <th>Sales Margin Amount</th>\n",
       "      <th>Sales Price</th>\n",
       "      <th>Sales Quantity</th>\n",
       "      <th>Sales Rep</th>\n",
       "      <th>U/M</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10000481</td>\n",
       "      <td>2017-04-30</td>\n",
       "      <td>-237.91</td>\n",
       "      <td>2017-04-30</td>\n",
       "      <td>100012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban Large Eggs</td>\n",
       "      <td>2000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>200015</td>\n",
       "      <td>2017-04-30</td>\n",
       "      <td>237.91</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>237.91</td>\n",
       "      <td>237.91</td>\n",
       "      <td>1</td>\n",
       "      <td>184</td>\n",
       "      <td>EA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10002220</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>368.79</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>100233</td>\n",
       "      <td>20910</td>\n",
       "      <td>Moms Sliced Turkey</td>\n",
       "      <td>1000</td>\n",
       "      <td>824.96</td>\n",
       "      <td>200245</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>456.17</td>\n",
       "      <td>824.96</td>\n",
       "      <td>0.0</td>\n",
       "      <td>456.17</td>\n",
       "      <td>456.17</td>\n",
       "      <td>1</td>\n",
       "      <td>127</td>\n",
       "      <td>EA</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    CustKey    DateKey  Discount Amount Invoice Date  Invoice Number  \\\n",
       "0  10000481 2017-04-30          -237.91   2017-04-30          100012   \n",
       "1  10002220 2017-07-14           368.79   2017-07-14          100233   \n",
       "\n",
       "  Item Number                Item  Line Number  List Price  Order Number  \\\n",
       "0         NaN    Urban Large Eggs         2000        0.00        200015   \n",
       "1       20910  Moms Sliced Turkey         1000      824.96        200245   \n",
       "\n",
       "  Promised Delivery Date  Sales Amount  Sales Amount Based on List Price  \\\n",
       "0             2017-04-30        237.91                              0.00   \n",
       "1             2017-07-14        456.17                            824.96   \n",
       "\n",
       "   Sales Cost Amount  Sales Margin Amount  Sales Price  Sales Quantity  \\\n",
       "0                0.0               237.91       237.91               1   \n",
       "1                0.0               456.17       456.17               1   \n",
       "\n",
       "   Sales Rep U/M  \n",
       "0        184  EA  \n",
       "1        127  EA  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "9630c62b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CustKey                              0\n",
       "DateKey                              0\n",
       "Discount Amount                      2\n",
       "Invoice Date                         0\n",
       "Invoice Number                       0\n",
       "Item Number                         41\n",
       "Item                                 0\n",
       "Line Number                          0\n",
       "List Price                           0\n",
       "Order Number                         0\n",
       "Promised Delivery Date               0\n",
       "Sales Amount                         0\n",
       "Sales Amount Based on List Price     0\n",
       "Sales Cost Amount                    0\n",
       "Sales Margin Amount                  0\n",
       "Sales Price                          1\n",
       "Sales Quantity                       0\n",
       "Sales Rep                            0\n",
       "U/M                                  0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "3e3b7d11",
   "metadata": {},
   "outputs": [],
   "source": [
    "data.dropna(axis=0,how='any',inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "11b75301",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustKey</th>\n",
       "      <th>DateKey</th>\n",
       "      <th>Discount Amount</th>\n",
       "      <th>Invoice Date</th>\n",
       "      <th>Invoice Number</th>\n",
       "      <th>Item Number</th>\n",
       "      <th>Item</th>\n",
       "      <th>Line Number</th>\n",
       "      <th>List Price</th>\n",
       "      <th>Order Number</th>\n",
       "      <th>Promised Delivery Date</th>\n",
       "      <th>Sales Amount</th>\n",
       "      <th>Sales Amount Based on List Price</th>\n",
       "      <th>Sales Cost Amount</th>\n",
       "      <th>Sales Margin Amount</th>\n",
       "      <th>Sales Price</th>\n",
       "      <th>Sales Quantity</th>\n",
       "      <th>Sales Rep</th>\n",
       "      <th>U/M</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10002220</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>368.790</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>100233</td>\n",
       "      <td>20910</td>\n",
       "      <td>Moms Sliced Turkey</td>\n",
       "      <td>1000</td>\n",
       "      <td>824.960</td>\n",
       "      <td>200245</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>456.17</td>\n",
       "      <td>824.960</td>\n",
       "      <td>0.00</td>\n",
       "      <td>456.17</td>\n",
       "      <td>456.170000</td>\n",
       "      <td>1</td>\n",
       "      <td>127</td>\n",
       "      <td>EA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10002220</td>\n",
       "      <td>2017-10-17</td>\n",
       "      <td>109.730</td>\n",
       "      <td>2017-10-17</td>\n",
       "      <td>116165</td>\n",
       "      <td>38076</td>\n",
       "      <td>Cutting Edge Foot-Long Hot Dogs</td>\n",
       "      <td>1000</td>\n",
       "      <td>548.660</td>\n",
       "      <td>213157</td>\n",
       "      <td>2017-10-16</td>\n",
       "      <td>438.93</td>\n",
       "      <td>548.660</td>\n",
       "      <td>0.00</td>\n",
       "      <td>438.93</td>\n",
       "      <td>438.930000</td>\n",
       "      <td>1</td>\n",
       "      <td>127</td>\n",
       "      <td>EA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10004516</td>\n",
       "      <td>2017-05-27</td>\n",
       "      <td>96627.940</td>\n",
       "      <td>2017-05-27</td>\n",
       "      <td>103341</td>\n",
       "      <td>60776</td>\n",
       "      <td>High Top Sweet Onion</td>\n",
       "      <td>1000</td>\n",
       "      <td>408.520</td>\n",
       "      <td>203785</td>\n",
       "      <td>2017-05-28</td>\n",
       "      <td>89248.66</td>\n",
       "      <td>185876.600</td>\n",
       "      <td>0.00</td>\n",
       "      <td>89248.66</td>\n",
       "      <td>196.150901</td>\n",
       "      <td>455</td>\n",
       "      <td>124</td>\n",
       "      <td>SE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>10007866</td>\n",
       "      <td>2017-09-03</td>\n",
       "      <td>371.014</td>\n",
       "      <td>2017-09-03</td>\n",
       "      <td>100403</td>\n",
       "      <td>20910</td>\n",
       "      <td>Moms Sliced Turkey</td>\n",
       "      <td>2000</td>\n",
       "      <td>795.314</td>\n",
       "      <td>200436</td>\n",
       "      <td>2017-09-03</td>\n",
       "      <td>424.30</td>\n",
       "      <td>795.314</td>\n",
       "      <td>0.00</td>\n",
       "      <td>424.30</td>\n",
       "      <td>424.300000</td>\n",
       "      <td>1</td>\n",
       "      <td>149</td>\n",
       "      <td>EA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>10009356</td>\n",
       "      <td>2017-06-18</td>\n",
       "      <td>608.080</td>\n",
       "      <td>2017-06-18</td>\n",
       "      <td>105481</td>\n",
       "      <td>62550</td>\n",
       "      <td>Tell Tale Garlic</td>\n",
       "      <td>29000</td>\n",
       "      <td>575.000</td>\n",
       "      <td>205213</td>\n",
       "      <td>2017-06-18</td>\n",
       "      <td>541.92</td>\n",
       "      <td>1150.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>541.92</td>\n",
       "      <td>270.960000</td>\n",
       "      <td>2</td>\n",
       "      <td>103</td>\n",
       "      <td>EA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65277</th>\n",
       "      <td>10017638</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>505.780</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>226497</td>\n",
       "      <td>13447</td>\n",
       "      <td>High Top Oranges</td>\n",
       "      <td>8000</td>\n",
       "      <td>119.520</td>\n",
       "      <td>320895</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>569.90</td>\n",
       "      <td>1075.680</td>\n",
       "      <td>239.95</td>\n",
       "      <td>329.95</td>\n",
       "      <td>63.322222</td>\n",
       "      <td>9</td>\n",
       "      <td>180</td>\n",
       "      <td>EA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65278</th>\n",
       "      <td>10017638</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>410.750</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>226497</td>\n",
       "      <td>25906</td>\n",
       "      <td>Landslide White Sugar</td>\n",
       "      <td>38000</td>\n",
       "      <td>436.780</td>\n",
       "      <td>320895</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>462.81</td>\n",
       "      <td>873.560</td>\n",
       "      <td>423.55</td>\n",
       "      <td>39.26</td>\n",
       "      <td>231.405000</td>\n",
       "      <td>2</td>\n",
       "      <td>180</td>\n",
       "      <td>EA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65279</th>\n",
       "      <td>10017638</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>876.160</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>226497</td>\n",
       "      <td>61856</td>\n",
       "      <td>Moms Potato Salad</td>\n",
       "      <td>227001</td>\n",
       "      <td>232.920</td>\n",
       "      <td>320895</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>987.20</td>\n",
       "      <td>1863.360</td>\n",
       "      <td>574.00</td>\n",
       "      <td>413.20</td>\n",
       "      <td>123.400000</td>\n",
       "      <td>8</td>\n",
       "      <td>180</td>\n",
       "      <td>EA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65280</th>\n",
       "      <td>10017638</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>24226.770</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>226498</td>\n",
       "      <td>17801</td>\n",
       "      <td>Better Fancy Canned Sardines</td>\n",
       "      <td>1000</td>\n",
       "      <td>1431.230</td>\n",
       "      <td>320907</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>27297.51</td>\n",
       "      <td>51524.280</td>\n",
       "      <td>16188.90</td>\n",
       "      <td>11108.61</td>\n",
       "      <td>758.264167</td>\n",
       "      <td>36</td>\n",
       "      <td>180</td>\n",
       "      <td>EA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65281</th>\n",
       "      <td>10017638</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>24479.260</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>226498</td>\n",
       "      <td>27550</td>\n",
       "      <td>Imagine Popsicles</td>\n",
       "      <td>4000</td>\n",
       "      <td>1084.610</td>\n",
       "      <td>320907</td>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>27582.02</td>\n",
       "      <td>52061.280</td>\n",
       "      <td>14234.22</td>\n",
       "      <td>13347.80</td>\n",
       "      <td>574.625417</td>\n",
       "      <td>48</td>\n",
       "      <td>180</td>\n",
       "      <td>EA</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>65241 rows × 19 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        CustKey    DateKey  Discount Amount Invoice Date  Invoice Number  \\\n",
       "1      10002220 2017-07-14          368.790   2017-07-14          100233   \n",
       "2      10002220 2017-10-17          109.730   2017-10-17          116165   \n",
       "4      10004516 2017-05-27        96627.940   2017-05-27          103341   \n",
       "6      10007866 2017-09-03          371.014   2017-09-03          100403   \n",
       "7      10009356 2017-06-18          608.080   2017-06-18          105481   \n",
       "...         ...        ...              ...          ...             ...   \n",
       "65277  10017638 2018-03-21          505.780   2018-03-21          226497   \n",
       "65278  10017638 2018-03-21          410.750   2018-03-21          226497   \n",
       "65279  10017638 2018-03-21          876.160   2018-03-21          226497   \n",
       "65280  10017638 2018-03-21        24226.770   2018-03-21          226498   \n",
       "65281  10017638 2018-03-21        24479.260   2018-03-21          226498   \n",
       "\n",
       "      Item Number                             Item  Line Number  List Price  \\\n",
       "1           20910               Moms Sliced Turkey         1000     824.960   \n",
       "2           38076  Cutting Edge Foot-Long Hot Dogs         1000     548.660   \n",
       "4           60776             High Top Sweet Onion         1000     408.520   \n",
       "6           20910               Moms Sliced Turkey         2000     795.314   \n",
       "7           62550                 Tell Tale Garlic        29000     575.000   \n",
       "...           ...                              ...          ...         ...   \n",
       "65277       13447                 High Top Oranges         8000     119.520   \n",
       "65278       25906            Landslide White Sugar        38000     436.780   \n",
       "65279       61856                Moms Potato Salad       227001     232.920   \n",
       "65280       17801     Better Fancy Canned Sardines         1000    1431.230   \n",
       "65281       27550                Imagine Popsicles         4000    1084.610   \n",
       "\n",
       "       Order Number Promised Delivery Date  Sales Amount  \\\n",
       "1            200245             2017-07-14        456.17   \n",
       "2            213157             2017-10-16        438.93   \n",
       "4            203785             2017-05-28      89248.66   \n",
       "6            200436             2017-09-03        424.30   \n",
       "7            205213             2017-06-18        541.92   \n",
       "...             ...                    ...           ...   \n",
       "65277        320895             2018-03-21        569.90   \n",
       "65278        320895             2018-03-21        462.81   \n",
       "65279        320895             2018-03-21        987.20   \n",
       "65280        320907             2018-03-21      27297.51   \n",
       "65281        320907             2018-03-21      27582.02   \n",
       "\n",
       "       Sales Amount Based on List Price  Sales Cost Amount  \\\n",
       "1                               824.960               0.00   \n",
       "2                               548.660               0.00   \n",
       "4                            185876.600               0.00   \n",
       "6                               795.314               0.00   \n",
       "7                              1150.000               0.00   \n",
       "...                                 ...                ...   \n",
       "65277                          1075.680             239.95   \n",
       "65278                           873.560             423.55   \n",
       "65279                          1863.360             574.00   \n",
       "65280                         51524.280           16188.90   \n",
       "65281                         52061.280           14234.22   \n",
       "\n",
       "       Sales Margin Amount  Sales Price  Sales Quantity  Sales Rep U/M  \n",
       "1                   456.17   456.170000               1        127  EA  \n",
       "2                   438.93   438.930000               1        127  EA  \n",
       "4                 89248.66   196.150901             455        124  SE  \n",
       "6                   424.30   424.300000               1        149  EA  \n",
       "7                   541.92   270.960000               2        103  EA  \n",
       "...                    ...          ...             ...        ...  ..  \n",
       "65277               329.95    63.322222               9        180  EA  \n",
       "65278                39.26   231.405000               2        180  EA  \n",
       "65279               413.20   123.400000               8        180  EA  \n",
       "65280             11108.61   758.264167              36        180  EA  \n",
       "65281             13347.80   574.625417              48        180  EA  \n",
       "\n",
       "[65241 rows x 19 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7611b8cf",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "61bf32fb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CustKey                             0\n",
       "DateKey                             0\n",
       "Discount Amount                     0\n",
       "Invoice Date                        0\n",
       "Invoice Number                      0\n",
       "Item Number                         0\n",
       "Item                                0\n",
       "Line Number                         0\n",
       "List Price                          0\n",
       "Order Number                        0\n",
       "Promised Delivery Date              0\n",
       "Sales Amount                        0\n",
       "Sales Amount Based on List Price    0\n",
       "Sales Cost Amount                   0\n",
       "Sales Margin Amount                 0\n",
       "Sales Price                         0\n",
       "Sales Quantity                      0\n",
       "Sales Rep                           0\n",
       "U/M                                 0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a9723d97",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "7d0326d2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustKey</th>\n",
       "      <th>DateKey</th>\n",
       "      <th>Discount Amount</th>\n",
       "      <th>Invoice Date</th>\n",
       "      <th>Invoice Number</th>\n",
       "      <th>Item Number</th>\n",
       "      <th>Item</th>\n",
       "      <th>Line Number</th>\n",
       "      <th>List Price</th>\n",
       "      <th>Order Number</th>\n",
       "      <th>Promised Delivery Date</th>\n",
       "      <th>Sales Amount</th>\n",
       "      <th>Sales Amount Based on List Price</th>\n",
       "      <th>Sales Cost Amount</th>\n",
       "      <th>Sales Margin Amount</th>\n",
       "      <th>Sales Price</th>\n",
       "      <th>Sales Quantity</th>\n",
       "      <th>Sales Rep</th>\n",
       "      <th>U/M</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10002220</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>368.790</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>100233</td>\n",
       "      <td>20910</td>\n",
       "      <td>Moms Sliced Turkey</td>\n",
       "      <td>1000</td>\n",
       "      <td>824.960</td>\n",
       "      <td>200245</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>456.17</td>\n",
       "      <td>824.960</td>\n",
       "      <td>0.0</td>\n",
       "      <td>456.17</td>\n",
       "      <td>456.170000</td>\n",
       "      <td>1</td>\n",
       "      <td>127</td>\n",
       "      <td>EA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10002220</td>\n",
       "      <td>2017-10-17</td>\n",
       "      <td>109.730</td>\n",
       "      <td>2017-10-17</td>\n",
       "      <td>116165</td>\n",
       "      <td>38076</td>\n",
       "      <td>Cutting Edge Foot-Long Hot Dogs</td>\n",
       "      <td>1000</td>\n",
       "      <td>548.660</td>\n",
       "      <td>213157</td>\n",
       "      <td>2017-10-16</td>\n",
       "      <td>438.93</td>\n",
       "      <td>548.660</td>\n",
       "      <td>0.0</td>\n",
       "      <td>438.93</td>\n",
       "      <td>438.930000</td>\n",
       "      <td>1</td>\n",
       "      <td>127</td>\n",
       "      <td>EA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10004516</td>\n",
       "      <td>2017-05-27</td>\n",
       "      <td>96627.940</td>\n",
       "      <td>2017-05-27</td>\n",
       "      <td>103341</td>\n",
       "      <td>60776</td>\n",
       "      <td>High Top Sweet Onion</td>\n",
       "      <td>1000</td>\n",
       "      <td>408.520</td>\n",
       "      <td>203785</td>\n",
       "      <td>2017-05-28</td>\n",
       "      <td>89248.66</td>\n",
       "      <td>185876.600</td>\n",
       "      <td>0.0</td>\n",
       "      <td>89248.66</td>\n",
       "      <td>196.150901</td>\n",
       "      <td>455</td>\n",
       "      <td>124</td>\n",
       "      <td>SE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>10007866</td>\n",
       "      <td>2017-09-03</td>\n",
       "      <td>371.014</td>\n",
       "      <td>2017-09-03</td>\n",
       "      <td>100403</td>\n",
       "      <td>20910</td>\n",
       "      <td>Moms Sliced Turkey</td>\n",
       "      <td>2000</td>\n",
       "      <td>795.314</td>\n",
       "      <td>200436</td>\n",
       "      <td>2017-09-03</td>\n",
       "      <td>424.30</td>\n",
       "      <td>795.314</td>\n",
       "      <td>0.0</td>\n",
       "      <td>424.30</td>\n",
       "      <td>424.300000</td>\n",
       "      <td>1</td>\n",
       "      <td>149</td>\n",
       "      <td>EA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>10009356</td>\n",
       "      <td>2017-06-18</td>\n",
       "      <td>608.080</td>\n",
       "      <td>2017-06-18</td>\n",
       "      <td>105481</td>\n",
       "      <td>62550</td>\n",
       "      <td>Tell Tale Garlic</td>\n",
       "      <td>29000</td>\n",
       "      <td>575.000</td>\n",
       "      <td>205213</td>\n",
       "      <td>2017-06-18</td>\n",
       "      <td>541.92</td>\n",
       "      <td>1150.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>541.92</td>\n",
       "      <td>270.960000</td>\n",
       "      <td>2</td>\n",
       "      <td>103</td>\n",
       "      <td>EA</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    CustKey    DateKey  Discount Amount Invoice Date  Invoice Number  \\\n",
       "1  10002220 2017-07-14          368.790   2017-07-14          100233   \n",
       "2  10002220 2017-10-17          109.730   2017-10-17          116165   \n",
       "4  10004516 2017-05-27        96627.940   2017-05-27          103341   \n",
       "6  10007866 2017-09-03          371.014   2017-09-03          100403   \n",
       "7  10009356 2017-06-18          608.080   2017-06-18          105481   \n",
       "\n",
       "  Item Number                             Item  Line Number  List Price  \\\n",
       "1       20910               Moms Sliced Turkey         1000     824.960   \n",
       "2       38076  Cutting Edge Foot-Long Hot Dogs         1000     548.660   \n",
       "4       60776             High Top Sweet Onion         1000     408.520   \n",
       "6       20910               Moms Sliced Turkey         2000     795.314   \n",
       "7       62550                 Tell Tale Garlic        29000     575.000   \n",
       "\n",
       "   Order Number Promised Delivery Date  Sales Amount  \\\n",
       "1        200245             2017-07-14        456.17   \n",
       "2        213157             2017-10-16        438.93   \n",
       "4        203785             2017-05-28      89248.66   \n",
       "6        200436             2017-09-03        424.30   \n",
       "7        205213             2017-06-18        541.92   \n",
       "\n",
       "   Sales Amount Based on List Price  Sales Cost Amount  Sales Margin Amount  \\\n",
       "1                           824.960                0.0               456.17   \n",
       "2                           548.660                0.0               438.93   \n",
       "4                        185876.600                0.0             89248.66   \n",
       "6                           795.314                0.0               424.30   \n",
       "7                          1150.000                0.0               541.92   \n",
       "\n",
       "   Sales Price  Sales Quantity  Sales Rep U/M  \n",
       "1   456.170000               1        127  EA  \n",
       "2   438.930000               1        127  EA  \n",
       "4   196.150901             455        124  SE  \n",
       "6   424.300000               1        149  EA  \n",
       "7   270.960000               2        103  EA  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "23bc634c",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['years']=pd.DatetimeIndex(data.DateKey).year\n",
    "data['months']=pd.DatetimeIndex(data.DateKey).month\n",
    "data['days']=pd.DatetimeIndex(data.DateKey).day"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "493cfceb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustKey</th>\n",
       "      <th>DateKey</th>\n",
       "      <th>Discount Amount</th>\n",
       "      <th>Invoice Date</th>\n",
       "      <th>Invoice Number</th>\n",
       "      <th>Item Number</th>\n",
       "      <th>Item</th>\n",
       "      <th>Line Number</th>\n",
       "      <th>List Price</th>\n",
       "      <th>Order Number</th>\n",
       "      <th>...</th>\n",
       "      <th>Sales Amount Based on List Price</th>\n",
       "      <th>Sales Cost Amount</th>\n",
       "      <th>Sales Margin Amount</th>\n",
       "      <th>Sales Price</th>\n",
       "      <th>Sales Quantity</th>\n",
       "      <th>Sales Rep</th>\n",
       "      <th>U/M</th>\n",
       "      <th>years</th>\n",
       "      <th>months</th>\n",
       "      <th>days</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10002220</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>368.790</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>100233</td>\n",
       "      <td>20910</td>\n",
       "      <td>Moms Sliced Turkey</td>\n",
       "      <td>1000</td>\n",
       "      <td>824.960</td>\n",
       "      <td>200245</td>\n",
       "      <td>...</td>\n",
       "      <td>824.960</td>\n",
       "      <td>0.0</td>\n",
       "      <td>456.17</td>\n",
       "      <td>456.170000</td>\n",
       "      <td>1</td>\n",
       "      <td>127</td>\n",
       "      <td>EA</td>\n",
       "      <td>2017</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10002220</td>\n",
       "      <td>2017-10-17</td>\n",
       "      <td>109.730</td>\n",
       "      <td>2017-10-17</td>\n",
       "      <td>116165</td>\n",
       "      <td>38076</td>\n",
       "      <td>Cutting Edge Foot-Long Hot Dogs</td>\n",
       "      <td>1000</td>\n",
       "      <td>548.660</td>\n",
       "      <td>213157</td>\n",
       "      <td>...</td>\n",
       "      <td>548.660</td>\n",
       "      <td>0.0</td>\n",
       "      <td>438.93</td>\n",
       "      <td>438.930000</td>\n",
       "      <td>1</td>\n",
       "      <td>127</td>\n",
       "      <td>EA</td>\n",
       "      <td>2017</td>\n",
       "      <td>10</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10004516</td>\n",
       "      <td>2017-05-27</td>\n",
       "      <td>96627.940</td>\n",
       "      <td>2017-05-27</td>\n",
       "      <td>103341</td>\n",
       "      <td>60776</td>\n",
       "      <td>High Top Sweet Onion</td>\n",
       "      <td>1000</td>\n",
       "      <td>408.520</td>\n",
       "      <td>203785</td>\n",
       "      <td>...</td>\n",
       "      <td>185876.600</td>\n",
       "      <td>0.0</td>\n",
       "      <td>89248.66</td>\n",
       "      <td>196.150901</td>\n",
       "      <td>455</td>\n",
       "      <td>124</td>\n",
       "      <td>SE</td>\n",
       "      <td>2017</td>\n",
       "      <td>5</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>10007866</td>\n",
       "      <td>2017-09-03</td>\n",
       "      <td>371.014</td>\n",
       "      <td>2017-09-03</td>\n",
       "      <td>100403</td>\n",
       "      <td>20910</td>\n",
       "      <td>Moms Sliced Turkey</td>\n",
       "      <td>2000</td>\n",
       "      <td>795.314</td>\n",
       "      <td>200436</td>\n",
       "      <td>...</td>\n",
       "      <td>795.314</td>\n",
       "      <td>0.0</td>\n",
       "      <td>424.30</td>\n",
       "      <td>424.300000</td>\n",
       "      <td>1</td>\n",
       "      <td>149</td>\n",
       "      <td>EA</td>\n",
       "      <td>2017</td>\n",
       "      <td>9</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>10009356</td>\n",
       "      <td>2017-06-18</td>\n",
       "      <td>608.080</td>\n",
       "      <td>2017-06-18</td>\n",
       "      <td>105481</td>\n",
       "      <td>62550</td>\n",
       "      <td>Tell Tale Garlic</td>\n",
       "      <td>29000</td>\n",
       "      <td>575.000</td>\n",
       "      <td>205213</td>\n",
       "      <td>...</td>\n",
       "      <td>1150.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>541.92</td>\n",
       "      <td>270.960000</td>\n",
       "      <td>2</td>\n",
       "      <td>103</td>\n",
       "      <td>EA</td>\n",
       "      <td>2017</td>\n",
       "      <td>6</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    CustKey    DateKey  Discount Amount Invoice Date  Invoice Number  \\\n",
       "1  10002220 2017-07-14          368.790   2017-07-14          100233   \n",
       "2  10002220 2017-10-17          109.730   2017-10-17          116165   \n",
       "4  10004516 2017-05-27        96627.940   2017-05-27          103341   \n",
       "6  10007866 2017-09-03          371.014   2017-09-03          100403   \n",
       "7  10009356 2017-06-18          608.080   2017-06-18          105481   \n",
       "\n",
       "  Item Number                             Item  Line Number  List Price  \\\n",
       "1       20910               Moms Sliced Turkey         1000     824.960   \n",
       "2       38076  Cutting Edge Foot-Long Hot Dogs         1000     548.660   \n",
       "4       60776             High Top Sweet Onion         1000     408.520   \n",
       "6       20910               Moms Sliced Turkey         2000     795.314   \n",
       "7       62550                 Tell Tale Garlic        29000     575.000   \n",
       "\n",
       "   Order Number  ... Sales Amount Based on List Price  Sales Cost Amount  \\\n",
       "1        200245  ...                          824.960                0.0   \n",
       "2        213157  ...                          548.660                0.0   \n",
       "4        203785  ...                       185876.600                0.0   \n",
       "6        200436  ...                          795.314                0.0   \n",
       "7        205213  ...                         1150.000                0.0   \n",
       "\n",
       "   Sales Margin Amount  Sales Price  Sales Quantity  Sales Rep  U/M  years  \\\n",
       "1               456.17   456.170000               1        127   EA   2017   \n",
       "2               438.93   438.930000               1        127   EA   2017   \n",
       "4             89248.66   196.150901             455        124   SE   2017   \n",
       "6               424.30   424.300000               1        149   EA   2017   \n",
       "7               541.92   270.960000               2        103   EA   2017   \n",
       "\n",
       "  months  days  \n",
       "1      7    14  \n",
       "2     10    17  \n",
       "4      5    27  \n",
       "6      9     3  \n",
       "7      6    18  \n",
       "\n",
       "[5 rows x 22 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b0f58158",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustKey</th>\n",
       "      <th>DateKey</th>\n",
       "      <th>Discount Amount</th>\n",
       "      <th>Invoice Date</th>\n",
       "      <th>Invoice Number</th>\n",
       "      <th>Item Number</th>\n",
       "      <th>Item</th>\n",
       "      <th>Line Number</th>\n",
       "      <th>List Price</th>\n",
       "      <th>Order Number</th>\n",
       "      <th>...</th>\n",
       "      <th>Sales Amount Based on List Price</th>\n",
       "      <th>Sales Cost Amount</th>\n",
       "      <th>Sales Margin Amount</th>\n",
       "      <th>Sales Price</th>\n",
       "      <th>Sales Quantity</th>\n",
       "      <th>Sales Rep</th>\n",
       "      <th>U/M</th>\n",
       "      <th>years</th>\n",
       "      <th>months</th>\n",
       "      <th>days</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10002220</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>368.790</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>100233</td>\n",
       "      <td>20910</td>\n",
       "      <td>Moms Sliced Turkey</td>\n",
       "      <td>1000</td>\n",
       "      <td>824.960</td>\n",
       "      <td>200245</td>\n",
       "      <td>...</td>\n",
       "      <td>824.960</td>\n",
       "      <td>0.0</td>\n",
       "      <td>456.17</td>\n",
       "      <td>456.170000</td>\n",
       "      <td>1</td>\n",
       "      <td>127</td>\n",
       "      <td>EA</td>\n",
       "      <td>2017</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10002220</td>\n",
       "      <td>2017-10-17</td>\n",
       "      <td>109.730</td>\n",
       "      <td>2017-10-17</td>\n",
       "      <td>116165</td>\n",
       "      <td>38076</td>\n",
       "      <td>Cutting Edge Foot-Long Hot Dogs</td>\n",
       "      <td>1000</td>\n",
       "      <td>548.660</td>\n",
       "      <td>213157</td>\n",
       "      <td>...</td>\n",
       "      <td>548.660</td>\n",
       "      <td>0.0</td>\n",
       "      <td>438.93</td>\n",
       "      <td>438.930000</td>\n",
       "      <td>1</td>\n",
       "      <td>127</td>\n",
       "      <td>EA</td>\n",
       "      <td>2017</td>\n",
       "      <td>10</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10004516</td>\n",
       "      <td>2017-05-27</td>\n",
       "      <td>96627.940</td>\n",
       "      <td>2017-05-27</td>\n",
       "      <td>103341</td>\n",
       "      <td>60776</td>\n",
       "      <td>High Top Sweet Onion</td>\n",
       "      <td>1000</td>\n",
       "      <td>408.520</td>\n",
       "      <td>203785</td>\n",
       "      <td>...</td>\n",
       "      <td>185876.600</td>\n",
       "      <td>0.0</td>\n",
       "      <td>89248.66</td>\n",
       "      <td>196.150901</td>\n",
       "      <td>455</td>\n",
       "      <td>124</td>\n",
       "      <td>SE</td>\n",
       "      <td>2017</td>\n",
       "      <td>5</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>10007866</td>\n",
       "      <td>2017-09-03</td>\n",
       "      <td>371.014</td>\n",
       "      <td>2017-09-03</td>\n",
       "      <td>100403</td>\n",
       "      <td>20910</td>\n",
       "      <td>Moms Sliced Turkey</td>\n",
       "      <td>2000</td>\n",
       "      <td>795.314</td>\n",
       "      <td>200436</td>\n",
       "      <td>...</td>\n",
       "      <td>795.314</td>\n",
       "      <td>0.0</td>\n",
       "      <td>424.30</td>\n",
       "      <td>424.300000</td>\n",
       "      <td>1</td>\n",
       "      <td>149</td>\n",
       "      <td>EA</td>\n",
       "      <td>2017</td>\n",
       "      <td>9</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>10009356</td>\n",
       "      <td>2017-06-18</td>\n",
       "      <td>608.080</td>\n",
       "      <td>2017-06-18</td>\n",
       "      <td>105481</td>\n",
       "      <td>62550</td>\n",
       "      <td>Tell Tale Garlic</td>\n",
       "      <td>29000</td>\n",
       "      <td>575.000</td>\n",
       "      <td>205213</td>\n",
       "      <td>...</td>\n",
       "      <td>1150.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>541.92</td>\n",
       "      <td>270.960000</td>\n",
       "      <td>2</td>\n",
       "      <td>103</td>\n",
       "      <td>EA</td>\n",
       "      <td>2017</td>\n",
       "      <td>6</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    CustKey    DateKey  Discount Amount Invoice Date  Invoice Number  \\\n",
       "1  10002220 2017-07-14          368.790   2017-07-14          100233   \n",
       "2  10002220 2017-10-17          109.730   2017-10-17          116165   \n",
       "4  10004516 2017-05-27        96627.940   2017-05-27          103341   \n",
       "6  10007866 2017-09-03          371.014   2017-09-03          100403   \n",
       "7  10009356 2017-06-18          608.080   2017-06-18          105481   \n",
       "\n",
       "  Item Number                             Item  Line Number  List Price  \\\n",
       "1       20910               Moms Sliced Turkey         1000     824.960   \n",
       "2       38076  Cutting Edge Foot-Long Hot Dogs         1000     548.660   \n",
       "4       60776             High Top Sweet Onion         1000     408.520   \n",
       "6       20910               Moms Sliced Turkey         2000     795.314   \n",
       "7       62550                 Tell Tale Garlic        29000     575.000   \n",
       "\n",
       "   Order Number  ... Sales Amount Based on List Price  Sales Cost Amount  \\\n",
       "1        200245  ...                          824.960                0.0   \n",
       "2        213157  ...                          548.660                0.0   \n",
       "4        203785  ...                       185876.600                0.0   \n",
       "6        200436  ...                          795.314                0.0   \n",
       "7        205213  ...                         1150.000                0.0   \n",
       "\n",
       "   Sales Margin Amount  Sales Price  Sales Quantity  Sales Rep  U/M  years  \\\n",
       "1               456.17   456.170000               1        127   EA   2017   \n",
       "2               438.93   438.930000               1        127   EA   2017   \n",
       "4             89248.66   196.150901             455        124   SE   2017   \n",
       "6               424.30   424.300000               1        149   EA   2017   \n",
       "7               541.92   270.960000               2        103   EA   2017   \n",
       "\n",
       "  months  days  \n",
       "1      7    14  \n",
       "2     10    17  \n",
       "4      5    27  \n",
       "6      9     3  \n",
       "7      6    18  \n",
       "\n",
       "[5 rows x 22 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "cc46d9ad",
   "metadata": {},
   "outputs": [],
   "source": [
    "new_data=data[['CustKey','years','months','days','Sales Amount','Sales Quantity']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "fd4d1756",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustKey</th>\n",
       "      <th>years</th>\n",
       "      <th>months</th>\n",
       "      <th>days</th>\n",
       "      <th>Sales Amount</th>\n",
       "      <th>Sales Quantity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10002220</td>\n",
       "      <td>2017</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>456.17</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10002220</td>\n",
       "      <td>2017</td>\n",
       "      <td>10</td>\n",
       "      <td>17</td>\n",
       "      <td>438.93</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10004516</td>\n",
       "      <td>2017</td>\n",
       "      <td>5</td>\n",
       "      <td>27</td>\n",
       "      <td>89248.66</td>\n",
       "      <td>455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>10007866</td>\n",
       "      <td>2017</td>\n",
       "      <td>9</td>\n",
       "      <td>3</td>\n",
       "      <td>424.30</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>10009356</td>\n",
       "      <td>2017</td>\n",
       "      <td>6</td>\n",
       "      <td>18</td>\n",
       "      <td>541.92</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65277</th>\n",
       "      <td>10017638</td>\n",
       "      <td>2018</td>\n",
       "      <td>3</td>\n",
       "      <td>21</td>\n",
       "      <td>569.90</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65278</th>\n",
       "      <td>10017638</td>\n",
       "      <td>2018</td>\n",
       "      <td>3</td>\n",
       "      <td>21</td>\n",
       "      <td>462.81</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65279</th>\n",
       "      <td>10017638</td>\n",
       "      <td>2018</td>\n",
       "      <td>3</td>\n",
       "      <td>21</td>\n",
       "      <td>987.20</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65280</th>\n",
       "      <td>10017638</td>\n",
       "      <td>2018</td>\n",
       "      <td>3</td>\n",
       "      <td>21</td>\n",
       "      <td>27297.51</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65281</th>\n",
       "      <td>10017638</td>\n",
       "      <td>2018</td>\n",
       "      <td>3</td>\n",
       "      <td>21</td>\n",
       "      <td>27582.02</td>\n",
       "      <td>48</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>65241 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        CustKey  years  months  days  Sales Amount  Sales Quantity\n",
       "1      10002220   2017       7    14        456.17               1\n",
       "2      10002220   2017      10    17        438.93               1\n",
       "4      10004516   2017       5    27      89248.66             455\n",
       "6      10007866   2017       9     3        424.30               1\n",
       "7      10009356   2017       6    18        541.92               2\n",
       "...         ...    ...     ...   ...           ...             ...\n",
       "65277  10017638   2018       3    21        569.90               9\n",
       "65278  10017638   2018       3    21        462.81               2\n",
       "65279  10017638   2018       3    21        987.20               8\n",
       "65280  10017638   2018       3    21      27297.51              36\n",
       "65281  10017638   2018       3    21      27582.02              48\n",
       "\n",
       "[65241 rows x 6 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "8d7b6ce9",
   "metadata": {},
   "outputs": [],
   "source": [
    "address=pd.read_excel('CUSTOMERADDRESS.xls')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "c5fda995",
   "metadata": {},
   "outputs": [],
   "source": [
    "address1=pd.read_excel('CUSTOMERS.xls')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "a16d37e7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Address Number</th>\n",
       "      <th>City</th>\n",
       "      <th>Country</th>\n",
       "      <th>Customer Address 1</th>\n",
       "      <th>Customer Address 2</th>\n",
       "      <th>Customer Address 3</th>\n",
       "      <th>Customer Address 4</th>\n",
       "      <th>State</th>\n",
       "      <th>Zip Code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10000000</td>\n",
       "      <td>Akron</td>\n",
       "      <td>US</td>\n",
       "      <td>PO Box 6258</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>OH</td>\n",
       "      <td>44312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10000453</td>\n",
       "      <td></td>\n",
       "      <td>UK</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>NaN</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Address Number                       City Country  \\\n",
       "0        10000000                      Akron      US   \n",
       "1        10000453                                 UK   \n",
       "\n",
       "                         Customer Address 1  \\\n",
       "0                               PO Box 6258   \n",
       "1                                             \n",
       "\n",
       "                         Customer Address 2  \\\n",
       "0                                             \n",
       "1                                             \n",
       "\n",
       "                         Customer Address 3  \\\n",
       "0                                             \n",
       "1                                             \n",
       "\n",
       "                         Customer Address 4 State      Zip Code  \n",
       "0                                              OH         44312  \n",
       "1                                             NaN                "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "address.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "662f2015",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Address Number</th>\n",
       "      <th>Business Family</th>\n",
       "      <th>Business Unit</th>\n",
       "      <th>Customer</th>\n",
       "      <th>Customer Number</th>\n",
       "      <th>Customer Type</th>\n",
       "      <th>Division</th>\n",
       "      <th>Line of Business</th>\n",
       "      <th>Phone</th>\n",
       "      <th>Region Code</th>\n",
       "      <th>Regional Sales Mgr</th>\n",
       "      <th>Search Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10000000</td>\n",
       "      <td>R3</td>\n",
       "      <td>1</td>\n",
       "      <td>City Supermarket</td>\n",
       "      <td>10000000</td>\n",
       "      <td>G2</td>\n",
       "      <td>2</td>\n",
       "      <td></td>\n",
       "      <td>816-455-8733</td>\n",
       "      <td>4</td>\n",
       "      <td>S16</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10000453</td>\n",
       "      <td>R3</td>\n",
       "      <td>1</td>\n",
       "      <td>A Supermarket</td>\n",
       "      <td>10000453</td>\n",
       "      <td>G1</td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td>816-455-8733</td>\n",
       "      <td>5</td>\n",
       "      <td>S19</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Address Number Business Family  Business Unit          Customer  \\\n",
       "0        10000000              R3              1  City Supermarket   \n",
       "1        10000453              R3              1     A Supermarket   \n",
       "\n",
       "   Customer Number Customer Type  Division Line of Business         Phone  \\\n",
       "0         10000000            G2         2                   816-455-8733   \n",
       "1         10000453            G1         1                   816-455-8733   \n",
       "\n",
       "   Region Code Regional Sales Mgr Search Type  \n",
       "0            4                S16           C  \n",
       "1            5                S19           C  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "address1.head(2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "568c66b9",
   "metadata": {},
   "source": [
    "Merging different tables to desired table for the analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "d0a9b8d8",
   "metadata": {},
   "outputs": [],
   "source": [
    "merged=address.merge(address1, on =\"Address Number\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "f68ef0c9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Address Number</th>\n",
       "      <th>City</th>\n",
       "      <th>Country</th>\n",
       "      <th>Customer Address 1</th>\n",
       "      <th>Customer Address 2</th>\n",
       "      <th>Customer Address 3</th>\n",
       "      <th>Customer Address 4</th>\n",
       "      <th>State</th>\n",
       "      <th>Zip Code</th>\n",
       "      <th>Business Family</th>\n",
       "      <th>Business Unit</th>\n",
       "      <th>Customer</th>\n",
       "      <th>Customer Number</th>\n",
       "      <th>Customer Type</th>\n",
       "      <th>Division</th>\n",
       "      <th>Line of Business</th>\n",
       "      <th>Phone</th>\n",
       "      <th>Region Code</th>\n",
       "      <th>Regional Sales Mgr</th>\n",
       "      <th>Search Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10000000</td>\n",
       "      <td>Akron</td>\n",
       "      <td>US</td>\n",
       "      <td>PO Box 6258</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>OH</td>\n",
       "      <td>44312</td>\n",
       "      <td>R3</td>\n",
       "      <td>1</td>\n",
       "      <td>City Supermarket</td>\n",
       "      <td>10000000</td>\n",
       "      <td>G2</td>\n",
       "      <td>2</td>\n",
       "      <td></td>\n",
       "      <td>816-455-8733</td>\n",
       "      <td>4</td>\n",
       "      <td>S16</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10000453</td>\n",
       "      <td></td>\n",
       "      <td>UK</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>NaN</td>\n",
       "      <td></td>\n",
       "      <td>R3</td>\n",
       "      <td>1</td>\n",
       "      <td>A Supermarket</td>\n",
       "      <td>10000453</td>\n",
       "      <td>G1</td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td>816-455-8733</td>\n",
       "      <td>5</td>\n",
       "      <td>S19</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Address Number                       City Country  \\\n",
       "0        10000000                      Akron      US   \n",
       "1        10000453                                 UK   \n",
       "\n",
       "                         Customer Address 1  \\\n",
       "0                               PO Box 6258   \n",
       "1                                             \n",
       "\n",
       "                         Customer Address 2  \\\n",
       "0                                             \n",
       "1                                             \n",
       "\n",
       "                         Customer Address 3  \\\n",
       "0                                             \n",
       "1                                             \n",
       "\n",
       "                         Customer Address 4 State      Zip Code  \\\n",
       "0                                              OH         44312   \n",
       "1                                             NaN                 \n",
       "\n",
       "  Business Family  Business Unit          Customer  Customer Number  \\\n",
       "0              R3              1  City Supermarket         10000000   \n",
       "1              R3              1     A Supermarket         10000453   \n",
       "\n",
       "  Customer Type  Division Line of Business         Phone  Region Code  \\\n",
       "0            G2         2                   816-455-8733            4   \n",
       "1            G1         1                   816-455-8733            5   \n",
       "\n",
       "  Regional Sales Mgr Search Type  \n",
       "0                S16           C  \n",
       "1                S19           C  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "merged.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "329201b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "merged['CustKey']=merged['Address Number']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "d2f16a6e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Address Number</th>\n",
       "      <th>City</th>\n",
       "      <th>Country</th>\n",
       "      <th>Customer Address 1</th>\n",
       "      <th>Customer Address 2</th>\n",
       "      <th>Customer Address 3</th>\n",
       "      <th>Customer Address 4</th>\n",
       "      <th>State</th>\n",
       "      <th>Zip Code</th>\n",
       "      <th>Business Family</th>\n",
       "      <th>...</th>\n",
       "      <th>Customer</th>\n",
       "      <th>Customer Number</th>\n",
       "      <th>Customer Type</th>\n",
       "      <th>Division</th>\n",
       "      <th>Line of Business</th>\n",
       "      <th>Phone</th>\n",
       "      <th>Region Code</th>\n",
       "      <th>Regional Sales Mgr</th>\n",
       "      <th>Search Type</th>\n",
       "      <th>CustKey</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10000000</td>\n",
       "      <td>Akron</td>\n",
       "      <td>US</td>\n",
       "      <td>PO Box 6258</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>OH</td>\n",
       "      <td>44312</td>\n",
       "      <td>R3</td>\n",
       "      <td>...</td>\n",
       "      <td>City Supermarket</td>\n",
       "      <td>10000000</td>\n",
       "      <td>G2</td>\n",
       "      <td>2</td>\n",
       "      <td></td>\n",
       "      <td>816-455-8733</td>\n",
       "      <td>4</td>\n",
       "      <td>S16</td>\n",
       "      <td>C</td>\n",
       "      <td>10000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10000453</td>\n",
       "      <td></td>\n",
       "      <td>UK</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>NaN</td>\n",
       "      <td></td>\n",
       "      <td>R3</td>\n",
       "      <td>...</td>\n",
       "      <td>A Supermarket</td>\n",
       "      <td>10000453</td>\n",
       "      <td>G1</td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td>816-455-8733</td>\n",
       "      <td>5</td>\n",
       "      <td>S19</td>\n",
       "      <td>C</td>\n",
       "      <td>10000453</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Address Number                       City Country  \\\n",
       "0        10000000                      Akron      US   \n",
       "1        10000453                                 UK   \n",
       "\n",
       "                         Customer Address 1  \\\n",
       "0                               PO Box 6258   \n",
       "1                                             \n",
       "\n",
       "                         Customer Address 2  \\\n",
       "0                                             \n",
       "1                                             \n",
       "\n",
       "                         Customer Address 3  \\\n",
       "0                                             \n",
       "1                                             \n",
       "\n",
       "                         Customer Address 4 State      Zip Code  \\\n",
       "0                                              OH         44312   \n",
       "1                                             NaN                 \n",
       "\n",
       "  Business Family  ...          Customer Customer Number  Customer Type  \\\n",
       "0              R3  ...  City Supermarket        10000000             G2   \n",
       "1              R3  ...     A Supermarket        10000453             G1   \n",
       "\n",
       "  Division  Line of Business         Phone Region Code  Regional Sales Mgr  \\\n",
       "0        2                    816-455-8733           4                 S16   \n",
       "1        1                    816-455-8733           5                 S19   \n",
       "\n",
       "  Search Type   CustKey  \n",
       "0           C  10000000  \n",
       "1           C  10000453  \n",
       "\n",
       "[2 rows x 21 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "merged.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "f35941be",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_merged=data.merge(merged,on=\"CustKey\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "320116e7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustKey</th>\n",
       "      <th>DateKey</th>\n",
       "      <th>Discount Amount</th>\n",
       "      <th>Invoice Date</th>\n",
       "      <th>Invoice Number</th>\n",
       "      <th>Item Number</th>\n",
       "      <th>Item</th>\n",
       "      <th>Line Number</th>\n",
       "      <th>List Price</th>\n",
       "      <th>Order Number</th>\n",
       "      <th>...</th>\n",
       "      <th>Business Unit</th>\n",
       "      <th>Customer</th>\n",
       "      <th>Customer Number</th>\n",
       "      <th>Customer Type</th>\n",
       "      <th>Division</th>\n",
       "      <th>Line of Business</th>\n",
       "      <th>Phone</th>\n",
       "      <th>Region Code</th>\n",
       "      <th>Regional Sales Mgr</th>\n",
       "      <th>Search Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10002220</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>368.79</td>\n",
       "      <td>2017-07-14</td>\n",
       "      <td>100233</td>\n",
       "      <td>20910</td>\n",
       "      <td>Moms Sliced Turkey</td>\n",
       "      <td>1000</td>\n",
       "      <td>824.96</td>\n",
       "      <td>200245</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>ACRON Shop</td>\n",
       "      <td>10002220</td>\n",
       "      <td>G3</td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td>816-455-8733</td>\n",
       "      <td>0</td>\n",
       "      <td>S5</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10002220</td>\n",
       "      <td>2017-10-17</td>\n",
       "      <td>109.73</td>\n",
       "      <td>2017-10-17</td>\n",
       "      <td>116165</td>\n",
       "      <td>38076</td>\n",
       "      <td>Cutting Edge Foot-Long Hot Dogs</td>\n",
       "      <td>1000</td>\n",
       "      <td>548.66</td>\n",
       "      <td>213157</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>ACRON Shop</td>\n",
       "      <td>10002220</td>\n",
       "      <td>G3</td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td>816-455-8733</td>\n",
       "      <td>0</td>\n",
       "      <td>S5</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows × 42 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    CustKey    DateKey  Discount Amount Invoice Date  Invoice Number  \\\n",
       "0  10002220 2017-07-14           368.79   2017-07-14          100233   \n",
       "1  10002220 2017-10-17           109.73   2017-10-17          116165   \n",
       "\n",
       "  Item Number                             Item  Line Number  List Price  \\\n",
       "0       20910               Moms Sliced Turkey         1000      824.96   \n",
       "1       38076  Cutting Edge Foot-Long Hot Dogs         1000      548.66   \n",
       "\n",
       "   Order Number  ... Business Unit    Customer  Customer Number  \\\n",
       "0        200245  ...             1  ACRON Shop         10002220   \n",
       "1        213157  ...             1  ACRON Shop         10002220   \n",
       "\n",
       "   Customer Type  Division  Line of Business         Phone  Region Code  \\\n",
       "0             G3         1                    816-455-8733            0   \n",
       "1             G3         1                    816-455-8733            0   \n",
       "\n",
       "  Regional Sales Mgr  Search Type  \n",
       "0                 S5            C  \n",
       "1                 S5            C  \n",
       "\n",
       "[2 rows x 42 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_merged.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "608ac710",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_data=final_merged[['CustKey','Country','years','months','days','Customer','Sales Amount','Sales Quantity']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "37c1ad72",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustKey</th>\n",
       "      <th>Country</th>\n",
       "      <th>years</th>\n",
       "      <th>months</th>\n",
       "      <th>days</th>\n",
       "      <th>Customer</th>\n",
       "      <th>Sales Amount</th>\n",
       "      <th>Sales Quantity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10002220</td>\n",
       "      <td>CA</td>\n",
       "      <td>2017</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>ACRON Shop</td>\n",
       "      <td>456.17</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10002220</td>\n",
       "      <td>CA</td>\n",
       "      <td>2017</td>\n",
       "      <td>10</td>\n",
       "      <td>17</td>\n",
       "      <td>ACRON Shop</td>\n",
       "      <td>438.93</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10002220</td>\n",
       "      <td>CA</td>\n",
       "      <td>2017</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>ACRON Shop</td>\n",
       "      <td>208.25</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10002220</td>\n",
       "      <td>CA</td>\n",
       "      <td>2017</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>ACRON Shop</td>\n",
       "      <td>209.32</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10002220</td>\n",
       "      <td>CA</td>\n",
       "      <td>2017</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>ACRON Shop</td>\n",
       "      <td>408.55</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54370</th>\n",
       "      <td>10008893</td>\n",
       "      <td>US</td>\n",
       "      <td>2018</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>Caravelle Shop</td>\n",
       "      <td>4078.96</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54371</th>\n",
       "      <td>10008893</td>\n",
       "      <td>US</td>\n",
       "      <td>2018</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>Caravelle Shop</td>\n",
       "      <td>572.25</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54372</th>\n",
       "      <td>10008893</td>\n",
       "      <td>US</td>\n",
       "      <td>2018</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>Caravelle Shop</td>\n",
       "      <td>407.42</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54373</th>\n",
       "      <td>10020715</td>\n",
       "      <td>UK</td>\n",
       "      <td>2018</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>Old Store</td>\n",
       "      <td>2037.07</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54374</th>\n",
       "      <td>10020715</td>\n",
       "      <td>UK</td>\n",
       "      <td>2018</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>Old Store</td>\n",
       "      <td>2712.58</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>54375 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        CustKey Country  years  months  days        Customer  Sales Amount  \\\n",
       "0      10002220      CA   2017       7    14      ACRON Shop        456.17   \n",
       "1      10002220      CA   2017      10    17      ACRON Shop        438.93   \n",
       "2      10002220      CA   2017       1     2      ACRON Shop        208.25   \n",
       "3      10002220      CA   2017       1     2      ACRON Shop        209.32   \n",
       "4      10002220      CA   2017       1     2      ACRON Shop        408.55   \n",
       "...         ...     ...    ...     ...   ...             ...           ...   \n",
       "54370  10008893      US   2018       2    14  Caravelle Shop       4078.96   \n",
       "54371  10008893      US   2018       3     7  Caravelle Shop        572.25   \n",
       "54372  10008893      US   2018       3    10  Caravelle Shop        407.42   \n",
       "54373  10020715      UK   2018       2    20       Old Store       2037.07   \n",
       "54374  10020715      UK   2018       2    20       Old Store       2712.58   \n",
       "\n",
       "       Sales Quantity  \n",
       "0                   1  \n",
       "1                   1  \n",
       "2                   1  \n",
       "3                   2  \n",
       "4                   6  \n",
       "...               ...  \n",
       "54370               8  \n",
       "54371               7  \n",
       "54372               2  \n",
       "54373              10  \n",
       "54374              10  \n",
       "\n",
       "[54375 rows x 8 columns]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "38e0453c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CustKey           0\n",
       "Country           0\n",
       "years             0\n",
       "months            0\n",
       "days              0\n",
       "Customer          0\n",
       "Sales Amount      0\n",
       "Sales Quantity    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_data.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae92cfca",
   "metadata": {},
   "source": [
    "## Sales by Years"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "6fc099a5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "years\n",
       "2017    75043387.99\n",
       "2018    13102144.24\n",
       "2019    48081534.14\n",
       "Name: Sales Amount, dtype: float64"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "year_wise_sales=final_data.groupby('years')['Sales Amount'].sum()\n",
    "year_wise_sales"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "fe6a3608",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "year_wise_sales.plot(kind='bar')\n",
    "plt.ylabel('Sales')\n",
    "plt.title('Sales by Years');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "130af419",
   "metadata": {},
   "source": [
    "## Sales by Months"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "8d74e501",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "months\n",
       "1     13107298.09\n",
       "2     14268697.20\n",
       "3     15548050.88\n",
       "4      8230890.23\n",
       "5      8061716.88\n",
       "6     12335613.22\n",
       "7      9403568.53\n",
       "8     10289227.88\n",
       "9     12785807.71\n",
       "10     9873058.57\n",
       "11    11674955.19\n",
       "12    10648181.99\n",
       "Name: Sales Amount, dtype: float64"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "month_wise_sales=final_data.groupby('months')['Sales Amount'].sum()\n",
    "month_wise_sales"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "317b3f45",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "month_wise_sales.plot(kind='line',color='blue')\n",
    "plt.ylabel('Sales')\n",
    "plt.title('Sales by Months');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9b2b879e",
   "metadata": {},
   "source": [
    "## Sales by Days"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "a3451b2d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "days\n",
       "1     5112373.24\n",
       "2     2594055.99\n",
       "3     3940250.85\n",
       "4     3775053.55\n",
       "5     5763141.84\n",
       "6     4395357.27\n",
       "7     4146070.89\n",
       "8     5014784.30\n",
       "9     4774932.81\n",
       "10    4677599.51\n",
       "11    5221805.97\n",
       "12    4061507.53\n",
       "13    4197559.42\n",
       "14    4059549.75\n",
       "15    3022707.55\n",
       "16    3909465.32\n",
       "17    4965086.33\n",
       "18    4474999.21\n",
       "19    4579131.81\n",
       "20    3869176.27\n",
       "21    4767241.55\n",
       "22    4615133.37\n",
       "23    4183980.69\n",
       "24    5642353.46\n",
       "25    4294270.96\n",
       "26    5281898.41\n",
       "27    3818888.00\n",
       "28    4933989.25\n",
       "29    5957073.95\n",
       "30    4647063.86\n",
       "31    1530563.46\n",
       "Name: Sales Amount, dtype: float64"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "day_wise_sales=final_data.groupby('days')['Sales Amount'].sum()\n",
    "day_wise_sales"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "303d8043",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "day_wise_sales.plot(kind='bar')\n",
    "plt.ylabel('Sales')\n",
    "plt.title('Sales by Days');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6396e76a",
   "metadata": {},
   "source": [
    "## Top Customers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "cb071ec8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Customer\n",
       "A Supermarket        180549.30\n",
       "A&B Shop             227440.19\n",
       "A&R Market           103528.05\n",
       "A-2-Z Supermarket    344124.34\n",
       "A-ARVIN Store          2937.96\n",
       "Name: Sales Amount, dtype: float64"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_customers=final_data.groupby('Customer')['Sales Amount'].sum().head(5)\n",
    "top_customers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "93d4ecfe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "top_customers.plot(kind='pie',autopct='%2.2f%%')\n",
    "plt.title('Top Customers');"
   ]
  },
 ,
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "49d11b76",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
